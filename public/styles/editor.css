
:root{
	--radius: 4pt;
	--border-color: #ddd;
	--border: solid 2pt var(--border-color);
	--background: white;
	--cover: #fffd;
	--text: black;
}

@media (prefers-color-scheme: dark){
	:root{
		--border-color: #333;
		--background: hsl(220deg,20%,8%);
		--cover: #000d;
		--text: #ddd;
	}
}

html {
	font-family: Helvetica, Roboto, Sans-serif;
	font-size: 14pt;
}
body {
	display: flex;
	background: var(--background);
}
body * {
	box-sizing: border-box;
	color: var(--text);
}
body :focus{
	outline: 0;
}
body h1 {
	font-size: 1rem;
	font-weight: normal;
}

.editor > header,
.browser > header {
	position: sticky;
	display: flex;
	top: 0;
	margin-inline: -1rem;
	border-inline: 0;
	border-top: 0;
	border-radius: 0;
	height: 3rem;
	gap: 0.5rem;
	z-index: 1;
	background-color: var(--background);
}
.editor > header > *,
.browser > header > * {
	border-radius: var(--radius);
	padding: 2pt 4pt;
	z-index: -1;
}
html,
body,
.editor,
.resize,
.browser {
	height: 100%;
}
.editor,
.browser {
	overflow: hidden scroll;
	padding: 0 1rem 1rem 1rem;
}
.editor > *,
.browser > *,
header > * {
	padding: 8pt;
	border-radius: var(--radius);
	background-color: transparent;
}
.editor > *,
.browser > *,
header > *,
.resize {
	transition-duration: 100ms;
	border: var(--border);
	border-color: var(--border-color);
}
.editor :not(header):hover,
.browser :not(header):hover,
.resize:hover {
	--border-color: #aaa;
}
.editor :not(header):focus,
.preview:focus,
.preview.open,
.resize:focus {
	--border-color: var(--text);
}

.editor {
	display: grid;
	grid-template-columns: repeat(2, minmax(0, 1fr));
	gap: 1rem;
	width: 24rem;
}
.editor > * {
	margin: 0;
	position: relative;
}
.editor > [name]::before {
	position: absolute;
	transform: translateY(-1.1rem);
	text-transform: lowercase;
	font-size: .8rem;
	padding-inline: .2ch;
	font-weight: 600;
	background: var(--background);
	color: var(--border-color);
	content: attr(name);
}
.editor > header,
.editor > .title,
.editor > .author,
.editor > .notif,
.editor > .media,
.editor > .md,
.editor > .body,
.editor > .id{
	grid-column-end: span 2;
}
.editor.render > :not(header) {
	padding: 0;
	border-color: transparent;
}
.editor.render > [name]::before{
	opacity: 0;
}
.editor ::placeholder {
	color: #888;
}
.editor header > * {
	flex: 1 0 0;
	width: 0;
}
header > [type=button] {
	cursor: pointer;
	text-decoration: none;
	color:var(--text);
}

.editor .id {
	cursor: pointer;
}
.editor .title {
	font-size: 1.6rem;
}
.editor .author {
	font-size: 1rem;
}
.editor .media {
	display: flex;
	flex: 0 0 10rem;
	height: 10rem;
	overflow-x: scroll hidden;
}
.editor .media > * {
	background: #ddd;
	margin-right: 8pt;
	width: 8rem;
}
.editor .media .new {
	display: flex;
	flex-direction: column;
}
.editor.render .media .new {
	display: none;
}
.editor .media .new .upload {
	flex-grow: 1;
	cursor: pointer;
}
.editor .media .new .upload input {
	display: none;
}
.editor .media .new .upload::before {
	content: 'Upload an image';
}
.media .image {
	position: relative;
	cursor: move;
}
.media .image img {
	width: 100%;
	height: 100%;
	object-fit: contain;
	pointer-events: none;
}
.media .image .delete {
	position: absolute;
	top: 0;
	right: 0;
}
.editor .body{
	display: none;
}
.editor .md {
	flex-grow: 1;
	line-height: 1.3;
}
.editor.render .body{
	display: block;
}
.editor.render .md{
	display: none;
}

.resize{
`	border-block-width: 0;
	flex: 0 0 8pt;
	cursor: col-resize;
}

.browser {
	flex: 1;
	max-height: 100vh;
	display: grid;
	grid-gap: 1rem;
	align-items: center;
	grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
	grid-template-rows: repeat(99,auto) 1fr;
}
.browser > * {
	padding: 8pt;
	border-radius: var(--radius);
}
.browser > header {
	order: -1;
	flex-wrap: wrap;
	grid-column: 1 / -1;
}
.browser > header > .search {
	width: 0;
	flex-grow: 1;
}
.preview {
	height: 10rem;
	display: flex;
	position: relative;
	flex-direction: column;
	background-size: cover;
	cursor: pointer;
	padding-bottom: 0;
	text-align: left;
}
.preview[hidden] {
	display: none;
}
.preview > * {
	width: 100%;
	margin: 2pt 0;
	pointer-events: none;
	opacity: 0.6;
}
.preview:hover > *,
.preview.open > * {
	opacity: 1;
}
.preview > .title {
	font-size: 1rem;
}
.preview > .author {
	font-size: 0.8rem;
}
.preview > .status{
	background: orange;
	color: black;
	border-radius: 2pt;
	font-size: .9rem;
	text-align: center;
	flex: 0 1 auto;
	overflow: hidden;
	opacity: 0;
}
.preview:not(.published) > .status {
	flex-shrink: 0;
	margin-bottom: 8pt;
	opacity: 1;
}
address {
	font-style: normal;
}
.preview .author::before {
	content: 'by ';
}
.preview > .body {
	overflow: hidden;
	flex-grow: 1;
	mask-image: linear-gradient(black 50%, transparent);
	-webkit-mask-image: linear-gradient(black 50%, transparent);
}
.preview > .body * {
	display: contents;
}
